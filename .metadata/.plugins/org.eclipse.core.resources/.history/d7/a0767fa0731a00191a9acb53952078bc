package com.revature.eval.java.core;

import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertThat;
import static org.junit.Assert.assertTrue;

import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;
import org.junit.runner.RunWith;
import org.junit.runners.Suite;
import org.junit.runners.Suite.SuiteClasses;


public class AllTests {
	private static final WorkArea evaluationService = new WorkArea();
	
	@Rule
	public ExpectedException expectedException = ExpectedException.none();
	
	/*******************************************************************
	 * Question 15
	 ******************************************************************/
	@Test
	public void validIsbnNumber() {
		assertTrue(evaluationService.isValidIsbn("3-598-21508-8"));
	}

	@Test
	public void invalidIsbnCheckDigit() {
		assertFalse(evaluationService.isValidIsbn("3-598-21508-9"));
	}

	@Test
	public void validIsbnNumberWithCheckDigitOfTen() {
		assertTrue(evaluationService.isValidIsbn("3-598-21507-X"));
	}

	@Test
	public void checkDigitIsACharacterOtherThanX() {
		assertFalse(evaluationService.isValidIsbn("3-598-21507-A"));
	}

	@Test
	public void invalidCharacterInIsbn() {
		assertFalse(evaluationService.isValidIsbn("3-598-2K507-0"));
	}
	
}
